
serial3.elf:     file format elf32-littlenios2
serial3.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000020

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x00000794 memsz 0x00000794 flags r-x
    LOAD off    0x000017b4 vaddr 0x000007b4 paddr 0x00000828 align 2**12
         filesz 0x00000074 memsz 0x00000074 flags rw-
    LOAD off    0x0000189c vaddr 0x0000089c paddr 0x0000089c align 2**12
         filesz 0x00000000 memsz 0x0000000c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000000  00000020  00000020  00001828  2**0
                  CONTENTS
  2 .text         00000768  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000002c  00000788  00000788  00001788  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00000074  000007b4  00000828  000017b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000000c  0000089c  0000089c  0000189c  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_mem   00000000  000008a8  000008a8  00001828  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00001828  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000290  00000000  00000000  00001850  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00001ce6  00000000  00000000  00001ae0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00000e58  00000000  00000000  000037c6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00000eea  00000000  00000000  0000461e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000003a4  00000000  00000000  00005508  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00000a6f  00000000  00000000  000058ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0000078d  00000000  00000000  0000631b  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000040  00000000  00000000  00006aa8  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000000c8  00000000  00000000  00006ae8  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  00007c84  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  00007c87  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00007c8a  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00007c8b  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   00000009  00000000  00000000  00007c8c  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    00000009  00000000  00000000  00007c95  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   00000009  00000000  00000000  00007c9e  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 00000007  00000000  00000000  00007ca7  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000028  00000000  00000000  00007cae  2**0
                  CONTENTS, READONLY
 26 .jdi          00003615  00000000  00000000  00007cd6  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     0005352f  00000000  00000000  0000b2eb  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000020 l    d  .text	00000000 .text
00000788 l    d  .rodata	00000000 .rodata
000007b4 l    d  .rwdata	00000000 .rwdata
0000089c l    d  .bss	00000000 .bss
000008a8 l    d  .onchip_mem	00000000 .onchip_mem
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../serial3_bsp//obj/HAL/src/crt0.o
00000058 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 hello_world_small.c
00000000 l    df *ABS*	00000000 alt_getchar.c
00000000 l    df *ABS*	00000000 alt_load.c
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_printf.c
00000000 l    df *ABS*	00000000 alt_putchar.c
00000000 l    df *ABS*	00000000 alt_putstr.c
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_sys_init.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
00000604 l     F .text	00000008 alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000634 l     F .text	0000006c udivmodsi4
00000000 l    df *ABS*	00000000 lib2-mul.c
000002a8 g     F .text	0000002c alt_main
00000828 g       *ABS*	00000000 __flash_rwdata_start
00000488 g     F .text	00000038 alt_putstr
00000810 g     O .rwdata	00000004 jtag_uart
00000000 g     F .entry	0000000c __reset
00000020 g       *ABS*	00000000 __flash_exceptions_start
000008a0 g     O .bss	00000004 alt_argv
0000880c g       *ABS*	00000000 _gp
000004c0 g     F .text	00000004 usleep
000007b4 g     O .rwdata	00000030 alt_fd_list
0000005c g     F .text	00000060 writeToSerial
000004e8 g     F .text	0000005c altera_avalon_jtag_uart_read
00000750 g     F .text	00000008 .hidden __udivsi3
00000814 g     O .rwdata	00000004 alt_max_fd
000008a8 g       *ABS*	00000000 __bss_end
0000016c g     F .text	00000044 alt_getchar
00000000 g       *ABS*	00000000 __alt_mem_onchip_mem
000007e4 g     O .rwdata	00000028 alt_dev_null
00000600 g     F .text	00000004 alt_dcache_flush_all
00000828 g       *ABS*	00000000 __ram_rwdata_end
00000818 g     O .rwdata	00000008 alt_dev_list
000007b4 g       *ABS*	00000000 __ram_rodata_end
00000758 g     F .text	00000008 .hidden __umodsi3
000008a8 g       *ABS*	00000000 end
00004000 g       *ABS*	00000000 __alt_stack_pointer
00000544 g     F .text	00000034 altera_avalon_jtag_uart_write
000002d4 g     F .text	0000016c alt_printf
00000020 g     F .text	0000003c _start
000004e4 g     F .text	00000004 alt_sys_init
00000760 g     F .text	00000028 .hidden __mulsi3
000007b4 g       *ABS*	00000000 __ram_rwdata_start
00000788 g       *ABS*	00000000 __ram_rodata_start
00000578 g     F .text	00000088 alt_busy_sleep
000008a8 g       *ABS*	00000000 __alt_stack_base
0000089c g       *ABS*	00000000 __bss_start
000000bc g     F .text	000000b0 main
0000089c g     O .bss	00000004 alt_envp
0000080c g     O .rwdata	00000001 bufferIn
000006a0 g     F .text	00000054 .hidden __divsi3
00000788 g       *ABS*	00000000 __flash_rodata_start
000004c4 g     F .text	00000020 alt_irq_init
000008a4 g     O .bss	00000004 alt_argc
00000820 g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
00000828 g       *ABS*	00000000 _edata
000008a8 g       *ABS*	00000000 _end
00000020 g       *ABS*	00000000 __ram_exceptions_end
00000610 g     F .text	00000008 altera_nios2_qsys_irq_init
000006f4 g     F .text	0000005c .hidden __modsi3
00004000 g       *ABS*	00000000 __alt_data_end
0000000c g       .entry	00000000 _exit
00000618 g     F .text	0000001c strlen
00000440 g     F .text	00000048 alt_putchar
0000060c g     F .text	00000004 alt_icache_flush_all
000001b0 g     F .text	000000f8 alt_load



Disassembly of section .entry:

00000000 <__reset>:
   0:	00400034 	movhi	at,0
   4:	08400814 	ori	at,at,32
   8:	0800683a 	jmp	at

0000000c <_exit>:
	...

Disassembly of section .text:

00000020 <_start>:
  20:	06c00034 	movhi	sp,0
  24:	ded00014 	ori	sp,sp,16384
  28:	06800034 	movhi	gp,0
  2c:	d6a20314 	ori	gp,gp,34828
  30:	00800034 	movhi	r2,0
  34:	10822714 	ori	r2,r2,2204
  38:	00c00034 	movhi	r3,0
  3c:	18c22a14 	ori	r3,r3,2216
  40:	10c00326 	beq	r2,r3,50 <_start+0x30>
  44:	10000015 	stw	zero,0(r2)
  48:	10800104 	addi	r2,r2,4
  4c:	10fffd36 	bltu	r2,r3,44 <_gp+0xffff7838>
  50:	00001b00 	call	1b0 <alt_load>
  54:	00002a80 	call	2a8 <alt_main>

00000058 <alt_after_alt_main>:
  58:	003fff06 	br	58 <_gp+0xffff784c>

0000005c <writeToSerial>:
#define Character_Received (volatile char *) 0x0005050//	Character_Received, Input to NIOS
#define load (volatile char *) 0x0005020

// Writes given character
void writeToSerial(char command) {
	IOWR_ALTERA_AVALON_PIO_DATA(data_in, command);
  5c:	21003fcc 	andi	r4,r4,255
#define Character_Sent (volatile char *) 0x0005010//  Character_Sent, Input to NIOS
#define Character_Received (volatile char *) 0x0005050//	Character_Received, Input to NIOS
#define load (volatile char *) 0x0005020

// Writes given character
void writeToSerial(char command) {
  60:	defffd04 	addi	sp,sp,-12
	IOWR_ALTERA_AVALON_PIO_DATA(data_in, command);
  64:	2100201c 	xori	r4,r4,128
#define Character_Sent (volatile char *) 0x0005010//  Character_Sent, Input to NIOS
#define Character_Received (volatile char *) 0x0005050//	Character_Received, Input to NIOS
#define load (volatile char *) 0x0005020

// Writes given character
void writeToSerial(char command) {
  68:	dfc00215 	stw	ra,8(sp)
  6c:	dc400115 	stw	r17,4(sp)
  70:	dc000015 	stw	r16,0(sp)
	IOWR_ALTERA_AVALON_PIO_DATA(data_in, command);
  74:	213fe004 	addi	r4,r4,-128
  78:	00940c04 	movi	r2,20528
  7c:	11000035 	stwio	r4,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(load, 1);
  80:	00800044 	movi	r2,1
  84:	04540804 	movi	r17,20512
  88:	88800035 	stwio	r2,0(r17)
	IOWR_ALTERA_AVALON_PIO_DATA(enable, 1);
  8c:	04140004 	movi	r16,20480
  90:	80800035 	stwio	r2,0(r16)
	usleep(4);
  94:	01000104 	movi	r4,4
  98:	00004c00 	call	4c0 <usleep>
	IOWR_ALTERA_AVALON_PIO_DATA(load, 0);
  9c:	0005883a 	mov	r2,zero
  a0:	88800035 	stwio	r2,0(r17)
	IOWR_ALTERA_AVALON_PIO_DATA(enable, 0);
  a4:	80800035 	stwio	r2,0(r16)
}
  a8:	dfc00217 	ldw	ra,8(sp)
  ac:	dc400117 	ldw	r17,4(sp)
  b0:	dc000017 	ldw	r16,0(sp)
  b4:	dec00304 	addi	sp,sp,12
  b8:	f800283a 	ret

000000bc <main>:
char bufferIn = '0';
int main()
{
  bc:	defffd04 	addi	sp,sp,-12
  c0:	dc400115 	stw	r17,4(sp)
  c4:	dfc00215 	stw	ra,8(sp)
  c8:	dc000015 	stw	r16,0(sp)

	// char* pBuffer = calloc(BUFFER_SIZE, sizeof(char));
	// char* pBufferHead = pBuffer;
	// char* pTransmit = pBuffer;

	*load = 0;
  cc:	00940804 	movi	r2,20512
  d0:	10000005 	stb	zero,0(r2)
	*enable = 0;
  d4:	00940004 	movi	r2,20480
  d8:	10000005 	stb	zero,0(r2)
	*data_in = 0xFF;
  dc:	00ffffc4 	movi	r3,-1
  e0:	00940c04 	movi	r2,20528
  e4:	10c00005 	stb	r3,0(r2)
		alt_getchar();
		writeToSerial(keyboard);
		bufferIn = keyboard;

		/* read */
		if (*Character_Received != 0) {
  e8:	04541404 	movi	r17,20560

	while (1)
	{

		// Write
		alt_putstr("Enter a letter:\n");
  ec:	01000034 	movhi	r4,0
  f0:	2101e204 	addi	r4,r4,1928
  f4:	00004880 	call	488 <alt_putstr>
		char keyboard = alt_getchar();
  f8:	000016c0 	call	16c <alt_getchar>
  fc:	1021883a 	mov	r16,r2
		alt_getchar();
 100:	000016c0 	call	16c <alt_getchar>
		writeToSerial(keyboard);
 104:	81003fcc 	andi	r4,r16,255
 108:	2100201c 	xori	r4,r4,128
 10c:	213fe004 	addi	r4,r4,-128
 110:	000005c0 	call	5c <writeToSerial>
		bufferIn = keyboard;
 114:	d4200005 	stb	r16,-32768(gp)

		/* read */
		if (*Character_Received != 0) {
 118:	88800003 	ldbu	r2,0(r17)
 11c:	10803fcc 	andi	r2,r2,255
 120:	1080201c 	xori	r2,r2,128
 124:	10bfe004 	addi	r2,r2,-128
 128:	10000926 	beq	r2,zero,150 <main+0x94>
			bufferIn = IORD_ALTERA_AVALON_PIO_DATA(data_out);
 12c:	00941804 	movi	r2,20576
 130:	11400037 	ldwio	r5,0(r2)
			alt_printf("Reading: %c", bufferIn);
 134:	01000034 	movhi	r4,0
		writeToSerial(keyboard);
		bufferIn = keyboard;

		/* read */
		if (*Character_Received != 0) {
			bufferIn = IORD_ALTERA_AVALON_PIO_DATA(data_out);
 138:	d1600005 	stb	r5,-32768(gp)
			alt_printf("Reading: %c", bufferIn);
 13c:	29403fcc 	andi	r5,r5,255
 140:	2940201c 	xori	r5,r5,128
 144:	2101e704 	addi	r4,r4,1948
 148:	297fe004 	addi	r5,r5,-128
 14c:	00002d40 	call	2d4 <alt_printf>
		}
		*leds = bufferIn;
 150:	d0e00003 	ldbu	r3,-32768(gp)
 154:	00941004 	movi	r2,20544
		usleep(1000000);
 158:	010003f4 	movhi	r4,15
		/* read */
		if (*Character_Received != 0) {
			bufferIn = IORD_ALTERA_AVALON_PIO_DATA(data_out);
			alt_printf("Reading: %c", bufferIn);
		}
		*leds = bufferIn;
 15c:	10c00005 	stb	r3,0(r2)
		usleep(1000000);
 160:	21109004 	addi	r4,r4,16960
 164:	00004c00 	call	4c0 <usleep>
	}
 168:	003fe006 	br	ec <_gp+0xffff78e0>

0000016c <alt_getchar>:
 16c:	00800034 	movhi	r2,0
 170:	1081ed04 	addi	r2,r2,1972
 174:	11c00217 	ldw	r7,8(r2)
 178:	defffe04 	addi	sp,sp,-8
 17c:	01000034 	movhi	r4,0
 180:	21020404 	addi	r4,r4,2064
 184:	d80b883a 	mov	r5,sp
 188:	01800044 	movi	r6,1
 18c:	dfc00115 	stw	ra,4(sp)
 190:	00004e80 	call	4e8 <altera_avalon_jtag_uart_read>
 194:	0080020e 	bge	zero,r2,1a0 <alt_getchar+0x34>
 198:	d8800007 	ldb	r2,0(sp)
 19c:	00000106 	br	1a4 <alt_getchar+0x38>
 1a0:	00bfffc4 	movi	r2,-1
 1a4:	dfc00117 	ldw	ra,4(sp)
 1a8:	dec00204 	addi	sp,sp,8
 1ac:	f800283a 	ret

000001b0 <alt_load>:
 1b0:	deffff04 	addi	sp,sp,-4
 1b4:	01000034 	movhi	r4,0
 1b8:	01400034 	movhi	r5,0
 1bc:	dfc00015 	stw	ra,0(sp)
 1c0:	2101ed04 	addi	r4,r4,1972
 1c4:	29420a04 	addi	r5,r5,2088
 1c8:	2140061e 	bne	r4,r5,1e4 <alt_load+0x34>
 1cc:	01000034 	movhi	r4,0
 1d0:	01400034 	movhi	r5,0
 1d4:	21000804 	addi	r4,r4,32
 1d8:	29400804 	addi	r5,r5,32
 1dc:	2140141e 	bne	r4,r5,230 <alt_load+0x80>
 1e0:	00000d06 	br	218 <alt_load+0x68>
 1e4:	00c00034 	movhi	r3,0
 1e8:	18c20a04 	addi	r3,r3,2088
 1ec:	00bfff04 	movi	r2,-4
 1f0:	1907c83a 	sub	r3,r3,r4
 1f4:	1886703a 	and	r3,r3,r2
 1f8:	0005883a 	mov	r2,zero
 1fc:	10fff326 	beq	r2,r3,1cc <_gp+0xffff79c0>
 200:	114f883a 	add	r7,r2,r5
 204:	39c00017 	ldw	r7,0(r7)
 208:	110d883a 	add	r6,r2,r4
 20c:	10800104 	addi	r2,r2,4
 210:	31c00015 	stw	r7,0(r6)
 214:	003ff906 	br	1fc <_gp+0xffff79f0>
 218:	01000034 	movhi	r4,0
 21c:	01400034 	movhi	r5,0
 220:	2101e204 	addi	r4,r4,1928
 224:	2941e204 	addi	r5,r5,1928
 228:	2140121e 	bne	r4,r5,274 <alt_load+0xc4>
 22c:	00000d06 	br	264 <alt_load+0xb4>
 230:	00c00034 	movhi	r3,0
 234:	18c00804 	addi	r3,r3,32
 238:	00bfff04 	movi	r2,-4
 23c:	1907c83a 	sub	r3,r3,r4
 240:	1886703a 	and	r3,r3,r2
 244:	0005883a 	mov	r2,zero
 248:	10fff326 	beq	r2,r3,218 <_gp+0xffff7a0c>
 24c:	114f883a 	add	r7,r2,r5
 250:	39c00017 	ldw	r7,0(r7)
 254:	110d883a 	add	r6,r2,r4
 258:	10800104 	addi	r2,r2,4
 25c:	31c00015 	stw	r7,0(r6)
 260:	003ff906 	br	248 <_gp+0xffff7a3c>
 264:	00006000 	call	600 <alt_dcache_flush_all>
 268:	dfc00017 	ldw	ra,0(sp)
 26c:	dec00104 	addi	sp,sp,4
 270:	000060c1 	jmpi	60c <alt_icache_flush_all>
 274:	00c00034 	movhi	r3,0
 278:	18c1ed04 	addi	r3,r3,1972
 27c:	00bfff04 	movi	r2,-4
 280:	1907c83a 	sub	r3,r3,r4
 284:	1886703a 	and	r3,r3,r2
 288:	0005883a 	mov	r2,zero
 28c:	10fff526 	beq	r2,r3,264 <_gp+0xffff7a58>
 290:	114f883a 	add	r7,r2,r5
 294:	39c00017 	ldw	r7,0(r7)
 298:	110d883a 	add	r6,r2,r4
 29c:	10800104 	addi	r2,r2,4
 2a0:	31c00015 	stw	r7,0(r6)
 2a4:	003ff906 	br	28c <_gp+0xffff7a80>

000002a8 <alt_main>:
 2a8:	deffff04 	addi	sp,sp,-4
 2ac:	0009883a 	mov	r4,zero
 2b0:	dfc00015 	stw	ra,0(sp)
 2b4:	00004c40 	call	4c4 <alt_irq_init>
 2b8:	00004e40 	call	4e4 <alt_sys_init>
 2bc:	d1202617 	ldw	r4,-32616(gp)
 2c0:	d1602517 	ldw	r5,-32620(gp)
 2c4:	d1a02417 	ldw	r6,-32624(gp)
 2c8:	dfc00017 	ldw	ra,0(sp)
 2cc:	dec00104 	addi	sp,sp,4
 2d0:	00000bc1 	jmpi	bc <main>

000002d4 <alt_printf>:
 2d4:	defff204 	addi	sp,sp,-56
 2d8:	dfc00a15 	stw	ra,40(sp)
 2dc:	df000915 	stw	fp,36(sp)
 2e0:	ddc00815 	stw	r23,32(sp)
 2e4:	dd800715 	stw	r22,28(sp)
 2e8:	dd400615 	stw	r21,24(sp)
 2ec:	dd000515 	stw	r20,20(sp)
 2f0:	dcc00415 	stw	r19,16(sp)
 2f4:	dc800315 	stw	r18,12(sp)
 2f8:	dc400215 	stw	r17,8(sp)
 2fc:	dc000115 	stw	r16,4(sp)
 300:	d9400b15 	stw	r5,44(sp)
 304:	d9800c15 	stw	r6,48(sp)
 308:	d9c00d15 	stw	r7,52(sp)
 30c:	04000944 	movi	r16,37
 310:	2005883a 	mov	r2,r4
 314:	dd400b04 	addi	r21,sp,44
 318:	048018c4 	movi	r18,99
 31c:	04c01e04 	movi	r19,120
 320:	05001cc4 	movi	r20,115
 324:	11000007 	ldb	r4,0(r2)
 328:	20003926 	beq	r4,zero,410 <alt_printf+0x13c>
 32c:	24000226 	beq	r4,r16,338 <alt_printf+0x64>
 330:	14400044 	addi	r17,r2,1
 334:	00001106 	br	37c <alt_printf+0xa8>
 338:	14400084 	addi	r17,r2,2
 33c:	10800047 	ldb	r2,1(r2)
 340:	10003326 	beq	r2,zero,410 <alt_printf+0x13c>
 344:	1400021e 	bne	r2,r16,350 <alt_printf+0x7c>
 348:	8009883a 	mov	r4,r16
 34c:	00000b06 	br	37c <alt_printf+0xa8>
 350:	1480051e 	bne	r2,r18,368 <alt_printf+0x94>
 354:	a9000017 	ldw	r4,0(r21)
 358:	ad800104 	addi	r22,r21,4
 35c:	b02b883a 	mov	r21,r22
 360:	00004400 	call	440 <alt_putchar>
 364:	00002806 	br	408 <alt_printf+0x134>
 368:	14c01f1e 	bne	r2,r19,3e8 <alt_printf+0x114>
 36c:	adc00017 	ldw	r23,0(r21)
 370:	ad400104 	addi	r21,r21,4
 374:	b800031e 	bne	r23,zero,384 <alt_printf+0xb0>
 378:	01000c04 	movi	r4,48
 37c:	00004400 	call	440 <alt_putchar>
 380:	00002106 	br	408 <alt_printf+0x134>
 384:	05800704 	movi	r22,28
 388:	00c003c4 	movi	r3,15
 38c:	1d84983a 	sll	r2,r3,r22
 390:	15c4703a 	and	r2,r2,r23
 394:	1000021e 	bne	r2,zero,3a0 <alt_printf+0xcc>
 398:	b5bfff04 	addi	r22,r22,-4
 39c:	003ffb06 	br	38c <_gp+0xffff7b80>
 3a0:	070003c4 	movi	fp,15
 3a4:	00c00244 	movi	r3,9
 3a8:	b0001716 	blt	r22,zero,408 <alt_printf+0x134>
 3ac:	e584983a 	sll	r2,fp,r22
 3b0:	15c4703a 	and	r2,r2,r23
 3b4:	1584d83a 	srl	r2,r2,r22
 3b8:	18800236 	bltu	r3,r2,3c4 <alt_printf+0xf0>
 3bc:	11000c04 	addi	r4,r2,48
 3c0:	00000106 	br	3c8 <alt_printf+0xf4>
 3c4:	110015c4 	addi	r4,r2,87
 3c8:	21003fcc 	andi	r4,r4,255
 3cc:	2100201c 	xori	r4,r4,128
 3d0:	213fe004 	addi	r4,r4,-128
 3d4:	d8c00015 	stw	r3,0(sp)
 3d8:	00004400 	call	440 <alt_putchar>
 3dc:	b5bfff04 	addi	r22,r22,-4
 3e0:	d8c00017 	ldw	r3,0(sp)
 3e4:	003ff006 	br	3a8 <_gp+0xffff7b9c>
 3e8:	1500071e 	bne	r2,r20,408 <alt_printf+0x134>
 3ec:	ad800017 	ldw	r22,0(r21)
 3f0:	ad400104 	addi	r21,r21,4
 3f4:	b1000007 	ldb	r4,0(r22)
 3f8:	20000326 	beq	r4,zero,408 <alt_printf+0x134>
 3fc:	b5800044 	addi	r22,r22,1
 400:	00004400 	call	440 <alt_putchar>
 404:	003ffb06 	br	3f4 <_gp+0xffff7be8>
 408:	8805883a 	mov	r2,r17
 40c:	003fc506 	br	324 <_gp+0xffff7b18>
 410:	dfc00a17 	ldw	ra,40(sp)
 414:	df000917 	ldw	fp,36(sp)
 418:	ddc00817 	ldw	r23,32(sp)
 41c:	dd800717 	ldw	r22,28(sp)
 420:	dd400617 	ldw	r21,24(sp)
 424:	dd000517 	ldw	r20,20(sp)
 428:	dcc00417 	ldw	r19,16(sp)
 42c:	dc800317 	ldw	r18,12(sp)
 430:	dc400217 	ldw	r17,8(sp)
 434:	dc000117 	ldw	r16,4(sp)
 438:	dec00e04 	addi	sp,sp,56
 43c:	f800283a 	ret

00000440 <alt_putchar>:
 440:	defffd04 	addi	sp,sp,-12
 444:	dc000115 	stw	r16,4(sp)
 448:	d9000005 	stb	r4,0(sp)
 44c:	2021883a 	mov	r16,r4
 450:	01000034 	movhi	r4,0
 454:	21020404 	addi	r4,r4,2064
 458:	d80b883a 	mov	r5,sp
 45c:	01800044 	movi	r6,1
 460:	000f883a 	mov	r7,zero
 464:	dfc00215 	stw	ra,8(sp)
 468:	00005440 	call	544 <altera_avalon_jtag_uart_write>
 46c:	00ffffc4 	movi	r3,-1
 470:	10c00126 	beq	r2,r3,478 <alt_putchar+0x38>
 474:	8005883a 	mov	r2,r16
 478:	dfc00217 	ldw	ra,8(sp)
 47c:	dc000117 	ldw	r16,4(sp)
 480:	dec00304 	addi	sp,sp,12
 484:	f800283a 	ret

00000488 <alt_putstr>:
 488:	defffe04 	addi	sp,sp,-8
 48c:	dc000015 	stw	r16,0(sp)
 490:	dfc00115 	stw	ra,4(sp)
 494:	2021883a 	mov	r16,r4
 498:	00006180 	call	618 <strlen>
 49c:	01000034 	movhi	r4,0
 4a0:	21020404 	addi	r4,r4,2064
 4a4:	800b883a 	mov	r5,r16
 4a8:	100d883a 	mov	r6,r2
 4ac:	000f883a 	mov	r7,zero
 4b0:	dfc00117 	ldw	ra,4(sp)
 4b4:	dc000017 	ldw	r16,0(sp)
 4b8:	dec00204 	addi	sp,sp,8
 4bc:	00005441 	jmpi	544 <altera_avalon_jtag_uart_write>

000004c0 <usleep>:
 4c0:	00005781 	jmpi	578 <alt_busy_sleep>

000004c4 <alt_irq_init>:
 4c4:	deffff04 	addi	sp,sp,-4
 4c8:	dfc00015 	stw	ra,0(sp)
 4cc:	00006100 	call	610 <altera_nios2_qsys_irq_init>
 4d0:	00800044 	movi	r2,1
 4d4:	1001703a 	wrctl	status,r2
 4d8:	dfc00017 	ldw	ra,0(sp)
 4dc:	dec00104 	addi	sp,sp,4
 4e0:	f800283a 	ret

000004e4 <alt_sys_init>:
 4e4:	f800283a 	ret

000004e8 <altera_avalon_jtag_uart_read>:
 4e8:	21000017 	ldw	r4,0(r4)
 4ec:	298d883a 	add	r6,r5,r6
 4f0:	2805883a 	mov	r2,r5
 4f4:	3a10000c 	andi	r8,r7,16384
 4f8:	11800b2e 	bgeu	r2,r6,528 <altera_avalon_jtag_uart_read+0x40>
 4fc:	20c00037 	ldwio	r3,0(r4)
 500:	1a60000c 	andi	r9,r3,32768
 504:	48000326 	beq	r9,zero,514 <altera_avalon_jtag_uart_read+0x2c>
 508:	10c00005 	stb	r3,0(r2)
 50c:	10800044 	addi	r2,r2,1
 510:	003ff906 	br	4f8 <_gp+0xffff7cec>
 514:	11400226 	beq	r2,r5,520 <altera_avalon_jtag_uart_read+0x38>
 518:	1145c83a 	sub	r2,r2,r5
 51c:	f800283a 	ret
 520:	403ff526 	beq	r8,zero,4f8 <_gp+0xffff7cec>
 524:	00000106 	br	52c <altera_avalon_jtag_uart_read+0x44>
 528:	117ffb1e 	bne	r2,r5,518 <_gp+0xffff7d0c>
 52c:	39d0000c 	andi	r7,r7,16384
 530:	3800021e 	bne	r7,zero,53c <altera_avalon_jtag_uart_read+0x54>
 534:	00bffec4 	movi	r2,-5
 538:	f800283a 	ret
 53c:	00bffd44 	movi	r2,-11
 540:	f800283a 	ret

00000544 <altera_avalon_jtag_uart_write>:
 544:	21000017 	ldw	r4,0(r4)
 548:	3005883a 	mov	r2,r6
 54c:	298d883a 	add	r6,r5,r6
 550:	21c00104 	addi	r7,r4,4
 554:	2980072e 	bgeu	r5,r6,574 <altera_avalon_jtag_uart_write+0x30>
 558:	38c00037 	ldwio	r3,0(r7)
 55c:	18ffffec 	andhi	r3,r3,65535
 560:	183ffc26 	beq	r3,zero,554 <_gp+0xffff7d48>
 564:	28c00007 	ldb	r3,0(r5)
 568:	20c00035 	stwio	r3,0(r4)
 56c:	29400044 	addi	r5,r5,1
 570:	003ff806 	br	554 <_gp+0xffff7d48>
 574:	f800283a 	ret

00000578 <alt_busy_sleep>:
 578:	014666b4 	movhi	r5,6554
 57c:	defffe04 	addi	sp,sp,-8
 580:	29666644 	addi	r5,r5,-26215
 584:	dc000015 	stw	r16,0(sp)
 588:	dfc00115 	stw	ra,4(sp)
 58c:	2021883a 	mov	r16,r4
 590:	00007500 	call	750 <__udivsi3>
 594:	10001026 	beq	r2,zero,5d8 <alt_busy_sleep+0x60>
 598:	01600034 	movhi	r5,32768
 59c:	013999b4 	movhi	r4,58982
 5a0:	0007883a 	mov	r3,zero
 5a4:	297fffc4 	addi	r5,r5,-1
 5a8:	211999c4 	addi	r4,r4,26215
 5ac:	297fffc4 	addi	r5,r5,-1
 5b0:	283ffe1e 	bne	r5,zero,5ac <_gp+0xffff7da0>
 5b4:	18c00044 	addi	r3,r3,1
 5b8:	8121883a 	add	r16,r16,r4
 5bc:	18bffb16 	blt	r3,r2,5ac <_gp+0xffff7da0>
 5c0:	8009883a 	mov	r4,r16
 5c4:	01400144 	movi	r5,5
 5c8:	00007600 	call	760 <__mulsi3>
 5cc:	10bfffc4 	addi	r2,r2,-1
 5d0:	103ffe1e 	bne	r2,zero,5cc <_gp+0xffff7dc0>
 5d4:	00000506 	br	5ec <alt_busy_sleep+0x74>
 5d8:	8009883a 	mov	r4,r16
 5dc:	01400144 	movi	r5,5
 5e0:	00007600 	call	760 <__mulsi3>
 5e4:	10bfffc4 	addi	r2,r2,-1
 5e8:	00bffe16 	blt	zero,r2,5e4 <_gp+0xffff7dd8>
 5ec:	0005883a 	mov	r2,zero
 5f0:	dfc00117 	ldw	ra,4(sp)
 5f4:	dc000017 	ldw	r16,0(sp)
 5f8:	dec00204 	addi	sp,sp,8
 5fc:	f800283a 	ret

00000600 <alt_dcache_flush_all>:
 600:	f800283a 	ret

00000604 <alt_dev_null_write>:
 604:	3005883a 	mov	r2,r6
 608:	f800283a 	ret

0000060c <alt_icache_flush_all>:
 60c:	f800283a 	ret

00000610 <altera_nios2_qsys_irq_init>:
 610:	000170fa 	wrctl	ienable,zero
 614:	f800283a 	ret

00000618 <strlen>:
 618:	2005883a 	mov	r2,r4
 61c:	10c00007 	ldb	r3,0(r2)
 620:	18000226 	beq	r3,zero,62c <strlen+0x14>
 624:	10800044 	addi	r2,r2,1
 628:	003ffc06 	br	61c <_gp+0xffff7e10>
 62c:	1105c83a 	sub	r2,r2,r4
 630:	f800283a 	ret

00000634 <udivmodsi4>:
 634:	2900182e 	bgeu	r5,r4,698 <udivmodsi4+0x64>
 638:	28001716 	blt	r5,zero,698 <udivmodsi4+0x64>
 63c:	00800804 	movi	r2,32
 640:	00c00044 	movi	r3,1
 644:	00000206 	br	650 <udivmodsi4+0x1c>
 648:	10001126 	beq	r2,zero,690 <udivmodsi4+0x5c>
 64c:	28000516 	blt	r5,zero,664 <udivmodsi4+0x30>
 650:	294b883a 	add	r5,r5,r5
 654:	10bfffc4 	addi	r2,r2,-1
 658:	18c7883a 	add	r3,r3,r3
 65c:	293ffa36 	bltu	r5,r4,648 <_gp+0xffff7e3c>
 660:	18000b26 	beq	r3,zero,690 <udivmodsi4+0x5c>
 664:	0005883a 	mov	r2,zero
 668:	21400236 	bltu	r4,r5,674 <udivmodsi4+0x40>
 66c:	2149c83a 	sub	r4,r4,r5
 670:	10c4b03a 	or	r2,r2,r3
 674:	1806d07a 	srli	r3,r3,1
 678:	280ad07a 	srli	r5,r5,1
 67c:	183ffa1e 	bne	r3,zero,668 <_gp+0xffff7e5c>
 680:	3000011e 	bne	r6,zero,688 <udivmodsi4+0x54>
 684:	f800283a 	ret
 688:	2005883a 	mov	r2,r4
 68c:	f800283a 	ret
 690:	0005883a 	mov	r2,zero
 694:	003ffa06 	br	680 <_gp+0xffff7e74>
 698:	00c00044 	movi	r3,1
 69c:	003ff106 	br	664 <_gp+0xffff7e58>

000006a0 <__divsi3>:
 6a0:	defffe04 	addi	sp,sp,-8
 6a4:	dfc00115 	stw	ra,4(sp)
 6a8:	dc000015 	stw	r16,0(sp)
 6ac:	20000b16 	blt	r4,zero,6dc <__divsi3+0x3c>
 6b0:	0021883a 	mov	r16,zero
 6b4:	28000c16 	blt	r5,zero,6e8 <__divsi3+0x48>
 6b8:	000d883a 	mov	r6,zero
 6bc:	00006340 	call	634 <udivmodsi4>
 6c0:	0407c83a 	sub	r3,zero,r16
 6c4:	1884f03a 	xor	r2,r3,r2
 6c8:	1405883a 	add	r2,r2,r16
 6cc:	dfc00117 	ldw	ra,4(sp)
 6d0:	dc000017 	ldw	r16,0(sp)
 6d4:	dec00204 	addi	sp,sp,8
 6d8:	f800283a 	ret
 6dc:	0109c83a 	sub	r4,zero,r4
 6e0:	04000044 	movi	r16,1
 6e4:	283ff40e 	bge	r5,zero,6b8 <_gp+0xffff7eac>
 6e8:	014bc83a 	sub	r5,zero,r5
 6ec:	8400005c 	xori	r16,r16,1
 6f0:	003ff106 	br	6b8 <_gp+0xffff7eac>

000006f4 <__modsi3>:
 6f4:	defffd04 	addi	sp,sp,-12
 6f8:	dfc00215 	stw	ra,8(sp)
 6fc:	dc400115 	stw	r17,4(sp)
 700:	dc000015 	stw	r16,0(sp)
 704:	20000c16 	blt	r4,zero,738 <__modsi3+0x44>
 708:	0023883a 	mov	r17,zero
 70c:	0021883a 	mov	r16,zero
 710:	28000d16 	blt	r5,zero,748 <__modsi3+0x54>
 714:	01800044 	movi	r6,1
 718:	00006340 	call	634 <udivmodsi4>
 71c:	1404f03a 	xor	r2,r2,r16
 720:	8885883a 	add	r2,r17,r2
 724:	dfc00217 	ldw	ra,8(sp)
 728:	dc400117 	ldw	r17,4(sp)
 72c:	dc000017 	ldw	r16,0(sp)
 730:	dec00304 	addi	sp,sp,12
 734:	f800283a 	ret
 738:	0109c83a 	sub	r4,zero,r4
 73c:	04400044 	movi	r17,1
 740:	043fffc4 	movi	r16,-1
 744:	283ff30e 	bge	r5,zero,714 <_gp+0xffff7f08>
 748:	014bc83a 	sub	r5,zero,r5
 74c:	003ff106 	br	714 <_gp+0xffff7f08>

00000750 <__udivsi3>:
 750:	000d883a 	mov	r6,zero
 754:	00006341 	jmpi	634 <udivmodsi4>

00000758 <__umodsi3>:
 758:	01800044 	movi	r6,1
 75c:	00006341 	jmpi	634 <udivmodsi4>

00000760 <__mulsi3>:
 760:	0005883a 	mov	r2,zero
 764:	20000726 	beq	r4,zero,784 <__mulsi3+0x24>
 768:	20c0004c 	andi	r3,r4,1
 76c:	2008d07a 	srli	r4,r4,1
 770:	18000126 	beq	r3,zero,778 <__mulsi3+0x18>
 774:	1145883a 	add	r2,r2,r5
 778:	294b883a 	add	r5,r5,r5
 77c:	203ffa1e 	bne	r4,zero,768 <_gp+0xffff7f5c>
 780:	f800283a 	ret
 784:	f800283a 	ret
